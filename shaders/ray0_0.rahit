#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_shader_explicit_arithmetic_types_int64 : require
#extension GL_EXT_buffer_reference : require
#extension GL_EXT_shader_16bit_storage : require
#extension GL_EXT_shader_8bit_storage : require
#extension GL_EXT_shader_explicit_arithmetic_types : require

#include "/lib/rt/data.glsl"
#include "/lib/rt/payload.glsl"
#include "/lib/rt/fragment_info.glsl"

layout(location = 6) rayPayloadInEXT Payload payload;

layout(buffer_reference) buffer Quads {
    Quad quads[]; 
};

hitAttributeEXT vec2 baryCoord;

layout(std140, binding = 0) uniform CameraInfo {
    vec3 corners[4];
    mat4 viewInverse;
    vec3 sunAngle;
} cam;

layout(binding = 2) buffer BlasDataAddresses { uint64_t address[]; } geometryReference;

layout(binding = 4) uniform  sampler2D blockTex;

Quad getRayQuad() {
    return Quads(geometryReference.address[gl_InstanceCustomIndexEXT + gl_GeometryIndexEXT]).quads[gl_PrimitiveID>>1];
}

void main() {
    Quad quad = getRayQuad();
    vec2 uv = getFragmentUV(quad, baryCoord);
    vec4 texColor = texture(blockTex, uv);
    if (texColor.a < 0.1) {
        ignoreIntersectionEXT;
    }
}